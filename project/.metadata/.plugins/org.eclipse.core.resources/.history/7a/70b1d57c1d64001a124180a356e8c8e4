package com.rakuten.utils;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.util.ArrayList;

public class utils {

	private static String hexString = "0123456789ABCDEF";
	
	public static String searchTagandExtractValueFromIt(String Str) {
	
		return "";
	}
	
	public static boolean isTagPresentInTLVString(String tag) {
		return true;
	}

	
	public static int readTagLength(String apduResponse) {
	    int len_bytes = 0;
	    if (apduResponse.length() > 2) {
	        len_bytes = (apduResponse.length()) / 2;
	    }
	    //Log.e("tlv length:", "bytes:" + len_bytes);
	    if (len_bytes < 128) {
	        return 2;
	    } else if (len_bytes > 127 && len_bytes < 255) {
	        return 4;
	    } else {
	        return 6;
	    }
	}
	
	/**
	 * encoding a character string to hex String
	 * @param str
	 * @return
	 */
	public static String encodeStringToHexString(String str) {
		//String hexString = "0123456789ABCDEF";
		byte[] bytes = str.getBytes();
		StringBuilder sb = new StringBuilder(bytes.length * 2);
		for (int i = 0; i < bytes.length; i++) {
			sb.append(hexString.charAt((bytes[i] & 0xf0) >> 4));
			sb.append(hexString.charAt((bytes[i] & 0x0f) >> 0));
		}
		return sb.toString();
	}
	
	
	public static int extractLengthofValueOfTLVString(String tlvHexString) {
		byte[] tlv = hexStringToByteArray(tlvHexString);
		if (tlv == null || tlv.length < 1) {
            throw new IllegalArgumentException("Invalid TLV");
        }
		
		
		return 0;
	}
	
	/**
	 * decoding a hex string to character string
	 * @param bytes
	 * @return
	 */
	public static String decodeHexStringToString(String bytes) {
		ByteArrayOutputStream baos = new ByteArrayOutputStream(bytes.length() / 2);
		for (int i = 0; i < bytes.length(); i += 2)
			baos.write((hexString.indexOf(bytes.charAt(i)) << 4 | hexString.indexOf(bytes.charAt(i + 1))));
		return new String(baos.toByteArray());
	}
	
	 /**
     * Reads TLV values for a given hex string.
     */
    public static byte[][] readTLV(String tlvHexString, int tag) {
        return readTLV(hexStringToByteArray(tlvHexString), tag);
    }
 
    /**
     * Reads TLV values for a given byte array.
     */
    public static byte[][] readTLV(byte[] tlv, int tag) {
        if (tlv == null || tlv.length < 1) {
            throw new IllegalArgumentException("Invalid TLV");
        }
 
        int c = 0;
        ArrayList al = new ArrayList();
 
        ByteArrayInputStream is = null;
        try {
             is = new ByteArrayInputStream(tlv);
 
             while ((c = is.read()) != -1) {
                if (c == tag){
                    //log.debug("Got tag");
                    if ((c = is.read()) != -1){
                        byte[] value = new byte[c];
                        is.read(value,0,c);
                        al.add(value);
                    }
                }
            }
        } finally {
            if (is != null) {
                try{
                    is.close();
                }catch (IOException e){
                    //log.error(e);
                }
            }
        }
        //log.debug("Got " + al.size() + " values for tag "  + Integer.toHexString(tag));
        byte[][] vals = new byte[al.size()][];
        al.toArray(vals);
        return vals;
    }
 
    /**
     * Converts a hex string to byte array.
     */
    public static byte[] hexStringToByteArray(String s) { 
        int len = s.length(); 
        byte[] data = new byte[len / 2]; 
        for (int i = 0; i < len; i += 2) { 
            data[i / 2] = (byte) ((Character.digit(s.charAt(i), 16) << 4) 
                                 + Character.digit(s.charAt(i+1), 16)); 
        } 
        return data; 
    }
	
	
}
